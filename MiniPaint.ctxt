#BlueJ class context
comment0.target=MiniPaint
comment0.text=\n\ A\ simple\ drawing\ program.\n\ The\ user\ can\ select\ from\ a\ variety\ of\ tools\ and\ options\ using\ the\ buttons\ and\n\ \ \ elements\ down\ the\ left\ side,\ and\ can\ use\ the\ mouse\ to\ add\ elements\ to\ the\ drawing\n\ \ \ according\ to\ the\ current\ tool\ and\ options\n\ Note,\ most\ of\ the\ "action"\ in\ the\ program\ happens\ in\ response\ to\ mouse\ events;\n\ \ \ the\ buttons,\ textFields,\ and\ sliders\ mostly\ record\ information\ that\ is\ used\n\ \ \ later\ by\ the\ mouse\ responding.\n
comment1.params=
comment1.target=void\ setupGUI()
comment1.text=\n\ Set\ up\ the\ interface\:\ buttons,\ textfields,\ sliders,\n\ listening\ to\ the\ mouse\n
comment10.params=
comment10.target=void\ fill()
comment11.params=
comment11.target=void\ fillColor()
comment12.params=
comment12.target=void\ lineColor()
comment13.params=
comment13.target=void\ image()
comment14.params=
comment14.target=void\ flower()
comment15.params=action\ x\ y
comment15.target=void\ doMouse(java.lang.String,\ double,\ double)
comment15.text=\n\ Respond\ to\ mouse\ events\n\ When\ pressed,\ remember\ the\ position.\n\ When\ released,\ draw\ what\ is\ specified\ by\ current\ tool\n\ Uses\ the\ value\ stored\ in\ the\ field\ to\ determine\ which\ kind\ of\ tool\ to\ draw.\n\ \ It\ should\ call\ the\ drawALine,\ drawARectangle,\ drawAnOval,\ etc,\ methods\n\ \ passing\ the\ pressed\ and\ released\ positions\n\ [Completion]\ should\ respond\ to\ "dragged"\ events\ also\ to\ do\ erasing\n
comment16.params=x1\ y1\ x2\ y2
comment16.target=void\ drawALine(double,\ double,\ double,\ double)
comment16.text=\n\ Draw\ a\ line\ between\ the\ two\ positions\ (x1,\ y1)\ and\ (x2,\ y2)\n
comment17.params=x1\ y1\ x2\ y2
comment17.target=void\ drawARectangle(double,\ double,\ double,\ double)
comment17.text=\n\ Draw\ a\ rectangle\ between\ the\ two\ diagonal\ corners\n\ [Completion]\ Works\ out\ the\ left,\ top,\ width,\ and\ height\ \n\ Then\ draws\ the\ rectangle,\ based\ on\ the\ options\n
comment18.params=x1\ y1\ x2\ y2
comment18.target=void\ drawAnOval(double,\ double,\ double,\ double)
comment18.text=\n\ Draw\ an\ oval\ to\ fit\ the\ rectangle\ between\ the\ the\ two\ diagonal\ corners\n\ [Completion]\ Works\ out\ the\ left,\ top,\ width,\ and\ height\ \n\ Then\ draws\ the\ oval,\ based\ on\ the\ options\n
comment19.params=x\ y
comment19.target=void\ setWord(double,\ double)
comment2.params=
comment2.target=void\ doSetLine()
comment20.params=x1\ y1\ x2\ y2
comment20.target=void\ drawAnImage(double,\ double,\ double,\ double)
comment21.params=x\ y\ radius
comment21.target=void\ drawAFlower(double,\ double,\ double)
comment21.text=\ [Completion]\n\ Draws\ a\ simple\ flower\ with\ 6\ petals,\ centered\ at\ (x,y)\ with\ the\ given\ radius\n
comment22.params=arguments
comment22.target=void\ main(java.lang.String[])
comment3.params=
comment3.target=void\ drawARect()
comment4.params=
comment4.target=void\ doSetOval()
comment5.params=text
comment5.target=void\ setWord(java.lang.String)
comment6.params=
comment6.target=void\ eraser()
comment7.params=value
comment7.target=void\ setWidth(double)
comment8.params=value
comment8.target=void\ setText(double)
comment9.params=value
comment9.target=void\ eraser(double)
numComments=23
